#################################解决当完成加密URL输入账号密码取流功能的时候，cgi-bin也就是与客户端通信POST请求会403Forbidden，以下配置是entry.cgi放在/userdata/oem/www/cgi-bin/entry.cgi路径适用，如果
entry.cgi路径变化，以下
1、 root           /userdata/oem/www;
2、   fastcgi_param  DOCUMENT_ROOT     /userdata/oem/www;
3、fastcgi_param SCRIPT_FILENAME /userdata/oem/www$real_script_name; 
要进行相应修改路径#######################

#user  nobody;
worker_processes  1;

#error_log  /tmp/error.log   debug_core;
#error_log  /tmp/error.log  notice;
#error_log  /tmp/error.log  info;

#pid        logs/nginx.pid;


events {
    worker_connections  1024;
}


http {
       log_format apidebug '$remote_addr "$request" s=$status us=$upstream_status '
                        'uri="$uri" ru="$request_uri" auth="$http_authorization" '
                        'cl=$content_length ct="$content_type"';
    include       mime.types;
    default_type  application/octet-stream;

    log_format  main  '$remote_addr - $remote_user [$time_local] "$request" '
                      '$status $body_bytes_sent "$http_referer" '
                      '"$http_user_agent" "$http_x_forwarded_for"';

    access_log  /tmp/access.log  main;
#   access_log off;

#    error_log   /tmp/error.log debug;
#    error_log   /tmp/error.log info;
#    error_log   /tmp/error.log alert;

    add_header Access-Control-Allow-Origin 'http://localhost:5173';
    add_header Access-Control-Allow-Methods 'GET, POST, PUT, DELETE, OPTIONS';
    add_header Access-Control-Allow-Headers 'DNT,X-Mx-ReqToken,Keep-Alive,User-Agent,X-Requested-With,If-Modified-Since,Cache-Control,Content-Range,Content-Type,Authorization';
    add_header Access-Control-Expose-Headers 'X-Location';
    add_header Access-Control-Allow-Credentials 'true';

    sendfile        on;
    #tcp_nopush     on;

    #keepalive_timeout  0;
    keepalive_timeout  65;

    gzip  on;
    gzip_min_length 20;
    gzip_comp_level 5;
    gzip_vary on;
    gzip_types application/javascript application/x-javascript text/javascript application/json text/css text/plain text/xml application/xml;
    gzip_static on;
    gzip_buffers 2 4k;
    gzip_http_version 1.1;

    server {
        
        listen       80;
        server_name  localhost;

        client_header_buffer_size 512k;
        large_client_header_buffers 7 512k;
 
location ^~ /hls/keys/ {
    default_type application/octet-stream;
    alias /userdata/secure/hlskeys/;   # 注意结尾 /
    add_header Cache-Control "no-store" always;

    # —— IP 白名单 ——（按你实际网段改）
    allow 127.0.0.1;
    allow 192.168.1.0/24;  # 例：整个内网都可取密钥
    # 或者只允许某几台：
    # allow 192.168.1.102;
    # allow 192.168.1.103;
    deny  all;
}

# 禁止直达真实目录
location ^~ /userdata/secure/hlskeys/ { deny all; }

	location /live {
	   flv_live on;
           chunked_transfer_encoding on;
	}

        # rtmp stat
#        location /stat {
#            rtmp_stat all;
#            rtmp_stat_stylesheet stat.xsl;
#        }

#        location /stat.xsl {
#            # you can move stat.xsl to a different location
#            root /oem/usr/www;
#        }

        # rtmp control
        location /control {
            rtmp_control all;
        }

        location / {                                                                                                                                                           
            root   /oem/usr/www;                                                                                                                                               
            index  index.html index.htm;                                                                                                                                       
        }  

        location /userdata {
           alias /userdata;
#           autoindex on;
#           autoindex_exact_size on;
#           autoindex_localtime on;
           sendfile on;
           set $viewflag 0;
           if ($request_filename ~* .(txt|bmp|log|ini)$) {
             set $viewflag 1;
           }
           
            if ($request_uri ~* view$) {
              set $viewflag 2;
            }
            
             if ($viewflag = 1) {
               add_header Content-Disposition attachment;
             }
        }


#	location ~* \.(mp4|bmp)$  {
#	    root /oem/usr/www;
#            if ($request_uri ~* view$) {
#		add_header Content-Disposition inline;
#	    }
#	    if ($request_uri !~* view$) {
#		add_header Content-Disposition attachment;
#	    }
#	}

        #error_page  404       /404.html;
        error_page  404         /;

        # redirect server error pages to the static page /50x.html
        #
        # error_page   500 502 503 504  /50x.html;
        # location = /50x.html {
        #     root   html;
        # }

location /cgi-bin/ {
    # 仅为调试，看看403来自哪里；调通后可以注释掉
    access_log /tmp/api_access.log apidebug;

    gzip           off;
    # root 不影响 FastCGI，但留着也无妨
    root           /userdata/oem/www;

    fastcgi_pass   unix:/run/fcgiwrap.sock;
    fastcgi_index  entry.cgi;

    # 1) DocumentRoot 要写到网站根，而不是到 cgi-bin 子目录
    fastcgi_param  DOCUMENT_ROOT     /userdata/oem/www;

    # 2) 先引入默认参数
    include        fastcgi_params;

    # 3) POST 必需头（有些系统默认不带）
    fastcgi_param  CONTENT_TYPE      $content_type;
    fastcgi_param  CONTENT_LENGTH    $content_length;

    # 4) 计算 PATH_INFO 与真实脚本名
    set $path_info "";
    set $real_script_name $fastcgi_script_name;
    if ($fastcgi_script_name ~ "^(.+?\.cgi)(/.+)$") {
        set $real_script_name $1;     # 如：/cgi-bin/entry.cgi
        set $path_info $2;            # 如：/incident/getIncidentImages
    }

    # 5) 告诉 fcgiwrap 到底执行哪个脚本（此时 $document_root=/oem/usr/www）
    fastcgi_param SCRIPT_FILENAME /userdata/oem/www$real_script_name;   # /oem/usr/www/cgi-bin/entry.cgi
    fastcgi_param SCRIPT_NAME     $real_script_name;                 # /cgi-bin/entry.cgi
    fastcgi_param PATH_INFO       $path_info;

    # 6) 不继承 BasicAuth
    auth_basic off;

    # 7) CORS/预检（前端需要的话保留）
    add_header Access-Control-Allow-Origin "http://localhost:5173" always;
    add_header Access-Control-Allow-Credentials "true" always;
    add_header Access-Control-Allow-Headers "Authorization,Content-Type,Accept,Origin,X-Requested-With" always;
    add_header Access-Control-Expose-Headers "X-Location,Content-Length,Content-Range" always;
    if ($request_method = OPTIONS) {
        add_header Access-Control-Allow-Methods "GET,POST,PUT,DELETE,OPTIONS" always;
        return 204;
    }

    # 8) 最后再清空这些（避免被 include 覆盖）
    fastcgi_param HTTP_AUTHORIZATION "";
    fastcgi_param REMOTE_USER "";
}


location /hls {
    types { application/vnd.apple.mpegurl m3u8; video/mp2t ts; }
    root /tmp;
    add_header Cache-Control "no-cache" always;

    # —— HLS 基本认证（保留加密）——
    auth_basic "HLS";
    auth_basic_user_file /userdata/secure/hls.htpasswd;

    # —— 只在这里把 401 改 403，防止浏览器弹窗 —— 
    error_page 401 =403 /__deny_basic;

    # 如你要带凭证请求，不要用 * ：改成你的前端域
    add_header Access-Control-Allow-Origin "http://localhost:5173" always;
    add_header Access-Control-Allow-Credentials "true" always;
    add_header Access-Control-Allow-Headers "Authorization,Range,Origin,Accept" always;
    add_header Access-Control-Expose-Headers "Content-Length,Accept-Ranges,Content-Range" always;

    if ($request_method = OPTIONS) {
        add_header Access-Control-Allow-Methods "GET,OPTIONS" always;
        return 204;
    }
}
location = /__deny_basic { return 403; }
}
}

rtmp {

    server {
        listen 1935;
        chunk_size 4096;
        #allow publish 127.0.0.1;
        #deny publish all;

        application live{
            live on;
            hls on;
            hls_path /tmp/hls;
            hls_nested on;
            hls_fragment 2s;
            hls_playlist_length 10s;
            #gop_cache on;
      hls_keys on;                             # 打开加密
      hls_key_path /userdata/secure/hlskeys;   # 密钥文件写这里
     hls_key_url  ../keys/;
      hls_fragments_per_key 10;                # 每 10 个分片轮换一次密钥
            allow play all;
			on_play  http://127.0.0.1/cgi-bin/entry.cgi/system/on_play;
			on_done  http://127.0.0.1/cgi-bin/entry.cgi/system/on_done;
        }
    }
}


